spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:8000/user_service}
spring.datasource.username=postgres
spring.datasource.password=xzq75757
spring.datasource.driver-class-name=org.postgresql.Driver

spring.flyway.password=${SPRING_DATASOURCE_PASSWORD:xzq75757}
spring.flyway.user=${SPRING_DATASOURCE_USERNAME:postgres}
spring.flyway.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:8000/user_service}
spring.flyway.locations=classpath:db/migration

spring.jpa.hibernate.ddl-auto=validate

eureka.client.serviceUrl.defaultZone=http://localhost:8181/eureka
spring.application.name=user-service
server.port=0

eureka.instance.instanceId=${spring.cloud.client.hostname}:${spring.application.name}:${spring.application.instance_id:${random.value}}

logging.pattern.level= "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

spring.kafka.bootstrap-servers=localhost:29092
spring.kafka.consumer.group-id=orderId
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=created:ru.nsu.fit.directors.userservice.event.OrderCreatedEvent,\
  \ cancelled:ru.nsu.fit.directors.userservice.event.OrderCancelledEvent
spring.kafka.template.default-topic=orderTopic

springdoc.swagger-ui.path=/user/swagger-ui.html
springdoc.api-docs.path=/user/api-docs
server.servlet.session.cookie.same-site=none
server.servlet.session.cookie.http-only=false
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.name=JSESSIONID_${spring.application.name}